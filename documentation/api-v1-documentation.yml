swagger: "2.0"
info:
  description: In Moderation Chrome extension backend API
  version: 1.0.0
  title: In Moderation REST API
  contact:
    email: ryan.brandt@rutgers.edu

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

tags:
  - name: rule
    description: Operations on site rules
  - name: site
    description: Operations on sites
  - name: user
    description: Operations on users

paths:
  /rule:
    get:
      tags:
        - rule
      summary: retrieves a list of site rules
      operationId: ruleList
      description: |
        lists all site rules matching the specified parameters
      parameters:
        - in: query
          name: userId
          required: true
          type: string
        - in: query
          name: siteId
          required: false
          type: string
      responses:
        200:
          description: the associated site rule data
          schema:
            type: array
            items:
              $ref: "#/definitions/SiteRuleWithSite"
        400:
          description: client error
        500:
          description: server error
    post:
      tags:
        - rule
      summary: creates a site rule
      operationId: ruleCreate
      description: |
        creates a new site rule with the provided parameters
      parameters:
        - in: body
          name: rule
          description: The rule to create
          schema:
            $ref: "#/definitions/SiteRule"
      responses:
        201:
          description: rule created
        400:
          description: client error
        500:
          description: server error

  /rule/{ruleId}:
    put:
      tags:
        - rule
      summary: updates a site rule
      operationId: ruleUpdate
      description: |
        updates a site rule with the provided parameters
      parameters:
        - in: path
          name: ruleId
          type: number
          required: true
        - in: body
          name: rule
          description: The updated rule data
          schema:
            $ref: "#/definitions/SiteRule"
      responses:
        200:
          description: rule updated
        400:
          description: client error
        500:
          description: server error
    delete:
      tags:
        - rule
      summary: deletes a site rule
      operationId: ruleDelete
      description: |
        deletes a site rule matching the specified id
      parameters:
        - in: path
          name: ruleId
          type: number
          required: true
      responses:
        200:
          description: rule deleted
        400:
          description: client error
        500:
          description: server error

  /site:
    post:
      tags:
        - site
      summary: creates a site
      operationId: siteCreate
      description: |
        creates a new site with the provided parameters
      parameters:
        - in: body
          name: site
          description: The site to create
          schema:
            $ref: "#/definitions/Site"
      responses:
        201:
          description: site created
        400:
          description: client error
        500:
          description: server error

  /user:
    post:
      tags:
        - user
      summary: creates a site
      operationId: userCreate
      description: |
        creates a new user with the provided parameters
      parameters:
        - in: body
          name: user
          description: The user to create
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: user created
        400:
          description: client error
        500:
          description: server error

definitions:
  SiteRuleWithSite:
    type: object
    required:
      - rule
    properties:
      rule:
        $ref: "#/definitions/SiteRule"
      site:
        $ref: "#/definitions/Site"

  SiteRule:
    type: object
    required:
      - userId
      - siteId
      - minutes
      - points
    properties:
      id:
        type: number
        example: 3
      userId:
        type: number
        example: 11
      siteId:
        type: number
        example: 44
      minutes:
        type: number
        example: 60
      points:
        type: number
        example: 2000
      created:
        type: string
        format: date-time
        example: "2017-07-21T17:32:28Z"
      modified:
        type: string
        format: date-time
        example: "2020-07-21T17:32:28Z"

  Site:
    required:
      - domain
    properties:
      id:
        type: number
        example: 11
      domain:
        type: string
        example: facebook.com
      created:
        type: string
        format: date-time
        example: "2017-07-21T17:32:28Z"

  User:
    required:
      - email
    properties:
      id:
        type: number
        example: 4
      email:
        type: string
        example: ryan.brandt@rutgers.edu
      created:
        type: string
        format: date-time
        example: "2017-07-21T17:32:28Z"
      modified:
        type: string
        format: date-time
        example: "2020-07-21T17:32:28Z"

host: virtserver.swaggerhub.com
basePath: /in-moderation/v1
schemes:
  - https
